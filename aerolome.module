<?php

/**
 *
 * @file
 * Primary module hooks for aeroLome module.
 */

/**
 * implement hook_preprocess_views_view_table
 */
function aerolome_preprocess_views_view_table(&$vars) {
  if (!empty($vars['rows'])) {
    $header = $vars['header'];
    $temp_rendered_array = [];
    /**
     * @var  Drupal\Core\Path\CurrentPathStack
     */
    $current_path = \Drupal::service("path.current");
    $splited_path = explode("/", $current_path->getPath());
    if (isset($header["field_tags"], $header["field_tags"]["content"])) {
      if ($header["field_tags"]["content"] == "Jour") {
        \Drupal::service('page_cache_kill_switch')->trigger();
      }
    }
    if ($splited_path[1] == "taxonomy" && $splited_path[2] == "term" || $current_path->getPath() == "/node/27" || $current_path->getPath() == "/node/70") {
      usort($vars["view"]->result, "aerolome_cmp_vols_date");
    }
    for ($i = 0; $i < count($vars["view"]->result); $i++) {
      $row_index = $vars["view"]->result[$i]->index;
      $temp_rendered_array[] = $vars["rows"][$row_index];
    }
    $vars["rows"] = $temp_rendered_array;
    foreach ($vars['rows'] as &$row) {
      foreach ($row['columns'] as $fieldName => &$value) {
        if (!empty($header[$fieldName])) {
          $label = $header[$fieldName]['content'];
          /**
           *
           * @var \Drupal\Core\Template\Attribute $attributes
           */
          $attributes = $value['attributes'];
          $attributes->setAttribute('data-label', $label);
          $value['attributes'] = $attributes;
        }
      }
    }
  }
}

function aerolome_cmp_vols_date($vol_1, $vol_2) {
  $current_path = \Drupal::service("path.current")->getPath();
  $vol_1_day = strtotime(get_str_indicator($vol_1->_entity->toArray()["field_tags"][0]["target_id"]));
  $vol_2_day = strtotime(get_str_indicator($vol_2->_entity->toArray()["field_tags"][0]["target_id"]));
  if ($current_path == "/node/27") {
    $vol_1_day += (int) $vol_1->_entity->toArray()["field_hour"][0]["value"];
    $vol_2_day += (int) $vol_2->_entity->toArray()["field_hour"][0]["value"];
    // } elseif ($current_path == "/node/70") {
  } else {
    $vol_1_day += (int) $vol_1->_entity->toArray()["field_hour2"][0]["value"];
    $vol_2_day += (int) $vol_2->_entity->toArray()["field_hour2"][0]["value"];
  }
  return $vol_1_day >= $vol_2_day ? 1 : -1;
}

function get_str_indicator($day_id) {

  return  match ((int) $day_id) {
    23 => "next Sunday",
    17 => "next Monday",
    18 => "next Tuesday",
    19 => "next Wednesday",
    20 => "next Thursday",
    21 => "next Friday",
    22 => "next Saturday",
  };
}
